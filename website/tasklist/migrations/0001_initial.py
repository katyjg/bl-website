# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2017-04-25 11:23
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
import tasklist.fields
import tasklist.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('description', models.CharField(max_length=100, verbose_name=b'name')),
                ('file', tasklist.fields.RestrictedFileField(help_text='Maximum size 2.5\xa0MB, Formats: PDF,JPEG,PNG,GIF,PLAIN.', upload_to=tasklist.models._attachment_filename, verbose_name=b"<i class='fa fa-paperclip'></i>&nbsp;Attach File")),
                ('slug', models.SlugField(blank=True, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('description', models.TextField(blank=True, verbose_name='Comment')),
                ('kind', models.CharField(choices=[(b'comment', 'Comment'), (b'update', 'Update')], default=b'comment', max_length=20, verbose_name='Type')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to=settings.AUTH_USER_MODEL, verbose_name='Author')),
            ],
            options={
                'get_latest_by': 'created',
            },
        ),
        migrations.CreateModel(
            name='Issue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('title', models.CharField(max_length=250, verbose_name='Title')),
                ('description', models.TextField(verbose_name='Description')),
                ('status', models.CharField(choices=[(b'new', 'New'), (b'pending', 'Pending'), (b'started', 'In progress'), (b'fixed', 'Complete'), (b'wontfix', 'Cancelled'), (b'permanent', 'Persistent')], default=b'new', max_length=20, verbose_name='Status')),
                ('priority', models.IntegerField(choices=[(0, b'Critical'), (1, b'High'), (2, b'Medium'), (3, b'Low')], default=2, verbose_name='Priority')),
                ('kind', models.CharField(choices=[(b'task', 'Task'), (b'bug', 'Bug'), (b'enhancement', 'Enhancement'), (b'maintenance', 'Maintenance')], default=b'task', max_length=20, verbose_name='Type')),
                ('due_date', models.DateField(blank=True, null=True, verbose_name='Due Date')),
                ('frequency', models.IntegerField(blank=True, help_text=b'Number of months', null=True, verbose_name='Frequency')),
            ],
            options={
                'ordering': ['priority', 'modified'],
            },
        ),
        migrations.CreateModel(
            name='Milestone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('name', models.CharField(max_length=50, verbose_name='Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('deadline', models.DateField(verbose_name='Deadline')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('name', models.CharField(max_length=50, verbose_name='Name')),
                ('short_description', models.CharField(blank=True, max_length=255, verbose_name='Short Description')),
                ('description', models.TextField(blank=True, null=True)),
                ('is_private', models.BooleanField(default=False, verbose_name='Private')),
                ('icon', models.ImageField(blank=True, null=True, upload_to=tasklist.models._image_filename)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='milestone',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tasklist.Project'),
        ),
        migrations.AddField(
            model_name='issue',
            name='milestone',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='issues', to='tasklist.Milestone'),
        ),
        migrations.AddField(
            model_name='issue',
            name='owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assigned_tasks', to=settings.AUTH_USER_MODEL, verbose_name='Assigned to'),
        ),
        migrations.AddField(
            model_name='issue',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='issues', to='tasklist.Project'),
        ),
        migrations.AddField(
            model_name='issue',
            name='related',
            field=models.ManyToManyField(blank=True, to='tasklist.Issue', verbose_name=b'Related to'),
        ),
        migrations.AddField(
            model_name='issue',
            name='submitter',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submitted_issues', to=settings.AUTH_USER_MODEL, verbose_name='Submitter'),
        ),
        migrations.AddField(
            model_name='comment',
            name='issue',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='tasklist.Issue'),
        ),
        migrations.AddField(
            model_name='attachment',
            name='issue',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tasklist.Issue'),
        ),
        migrations.AddField(
            model_name='attachment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
    ]
