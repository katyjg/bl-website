# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2017-04-19 15:19
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import feincms.contrib.fields
import feincms.contrib.richtext
import feincms.extensions.base
import feincms.module.mixins


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ApplicationContent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parameters', feincms.contrib.fields.JSONField(editable=False, null=True)),
                ('region', models.CharField(max_length=255)),
                ('ordering', models.IntegerField(default=0, verbose_name='ordering')),
                ('urlconf_path', models.CharField(choices=[(b'blog.brief_urls', b'News Items (Teaser)'), (b'application_form.urls', b'Application Form'), (b'scheduler.contacts_urls', b'Personnel List'), (b'application_form.registration_urls', b'PSFaM Registration'), (b'application_form.abstract_urls', b'Registrant Abstracts'), (b'publications.urls', b'Publications (List)'), (b'contact_form.urls', b'Feedback Form'), (b'blog.urls', b'News Items (Full)'), (b'publications.brief_urls', b'Publications (Teaser)'), (b'galleriffic.urls', b'Photo Galleries'), (b'scheduler.oncall_urls', b'Local Contact Legend'), (b'blog.slider_urls', b'News Items (Slider)'), (b'scheduler.urls', b'Beamline Schedule')], max_length=100, verbose_name='application')),
            ],
            options={
                'ordering': ['ordering'],
                'abstract': False,
                'verbose_name_plural': 'application contents',
                'db_table': 'page_page_applicationcontent',
                'verbose_name': 'application content',
                'permissions': [],
            },
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, verbose_name='active')),
                ('title', models.CharField(help_text='This title is also used for navigation menu items.', max_length=200, verbose_name='title')),
                ('slug', models.SlugField(help_text='This is used to build the URL for this page', max_length=150, verbose_name='slug')),
                ('in_navigation', models.BooleanField(default=False, verbose_name='in navigation')),
                ('override_url', models.CharField(blank=True, help_text="Override the target URL. Be sure to include slashes at the beginning and at the end if it is a local URL. This affects both the navigation and subpages' URLs.", max_length=255, verbose_name='override URL')),
                ('redirect_to', models.CharField(blank=True, help_text='Target URL for automatic redirects or the primary key of a page.', max_length=255, verbose_name='redirect to')),
                ('_cached_url', models.CharField(blank=True, db_index=True, default='', editable=False, max_length=255, verbose_name='Cached URL')),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('creation_date', models.DateTimeField(editable=False, null=True, verbose_name='creation date')),
                ('modification_date', models.DateTimeField(editable=False, null=True, verbose_name='modification date')),
                ('template_key', models.CharField(choices=[(b'wp-base', b'WP Base'), (b'wp-gallery', b'WP Gallery'), (b'wp-home', b'WP Home'), (b'wp-guide', b'WP Guide'), (b'wp-aca-guide', b'ACA Guide'), (b'wp-wcsb-base', b'WCSB Base'), (b'wp-calendar', b'WP Calendar'), (b'wp-7_5', b'WP 2-Col. 7/5'), (b'wp-5_7', b'WP 2-Col. 5/7'), (b'wp-8_4', b'WP 2-Col. 8/4'), (b'wp-6_6', b'WP 2-Col. 6/6'), (b'wp-9_3', b'WP 2-Col. 9/3'), (b'wp-10_2', b'WP 2-Col. 10/2'), (b'wp-sitemap', b'WP Sitemap'), (b'wp-2_8', b'WP 2-Col. 2/8'), (b'wp-2_7_3', b'WP 3-Col. 2/7/3')], default=b'wp-base', max_length=255, verbose_name='template')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='page.Page', verbose_name='Parent')),
            ],
            options={
                'ordering': ['tree_id', 'lft'],
                'verbose_name': 'page',
                'verbose_name_plural': 'pages',
            },
            bases=(models.Model, feincms.extensions.base.ExtensionsMixin, feincms.module.mixins.ContentModelMixin),
        ),
        migrations.CreateModel(
            name='RawContent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(blank=True, verbose_name='content')),
                ('region', models.CharField(max_length=255)),
                ('ordering', models.IntegerField(default=0, verbose_name='ordering')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rawcontent_set', to='page.Page')),
            ],
            options={
                'ordering': ['ordering'],
                'abstract': False,
                'verbose_name_plural': 'raw contents',
                'db_table': 'page_page_rawcontent',
                'verbose_name': 'raw content',
                'permissions': [],
            },
        ),
        migrations.CreateModel(
            name='RichTextContent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region', models.CharField(max_length=255)),
                ('ordering', models.IntegerField(default=0, verbose_name='ordering')),
                ('text', feincms.contrib.richtext.RichTextField(blank=True, verbose_name='text')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='richtextcontent_set', to='page.Page')),
            ],
            options={
                'ordering': ['ordering'],
                'abstract': False,
                'verbose_name_plural': 'rich texts',
                'db_table': 'page_page_richtextcontent',
                'verbose_name': 'rich text',
                'permissions': [],
            },
        ),
        migrations.CreateModel(
            name='VideoContent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video', models.URLField(help_text='This should be a link to a youtube or vimeo video, i.e.: http://www.youtube.com/watch?v=zmj1rpzDRZ0', verbose_name='video link')),
                ('region', models.CharField(max_length=255)),
                ('ordering', models.IntegerField(default=0, verbose_name='ordering')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='videocontent_set', to='page.Page')),
            ],
            options={
                'ordering': ['ordering'],
                'abstract': False,
                'verbose_name_plural': 'videos',
                'db_table': 'page_page_videocontent',
                'verbose_name': 'video',
                'permissions': [],
            },
        ),
        migrations.AddField(
            model_name='applicationcontent',
            name='parent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applicationcontent_set', to='page.Page'),
        ),
    ]
